parameters:
  PackageName: ""
  EnvVars: []
  MaxParallel: 0
  Matrix:
    Linux_Node10X:
      OSVmImage: "ubuntu-16.04"
      TestType: "node"
    Windows_Node10X:
      OSVmImage: "vs2017-win2016"
      TestType: "node"
    Mac_Node10X:
      OSVmImage: "macOS-10.13"
      TestType: "node"
    Browser_Linux_Node10X:
      OSVmImage: "ubuntu-16.04"
      TestType: "browser"
    Browser_Windows_Node10X:
      OSVmImage: "vs2017-win2016"
      TestType: "browser"
    Browser_Mac_Node10X:
      OSVmImage: "macOS-10.13"
      TestType: "browser"

variables:
  ProcessedMatrix:
    ${{ each matrixEntry in parameters.Matrix }}:
      # TestResultsFiles
      ${{ if eq(parameters.TestType, 'browser' )}}:
        TestResultsFiles: "**/test-results.browser.xml"
      ${{ if eq(parameters.TestType, 'node') }}:
        TestResultsFiles: "**/test-results.xml"

      # OSName:
      ${{ if eq(parameters.OSVmImage, 'ubuntu-16.04') }}:
        OSName: "Linux"
      ${{ if eq(parameters.OSVmImage, 'vs2017-win2016') }}:
        OSName: "Windows"
      ${{ if eq(parameters.OSVmImage, 'macOS-10.13') }}:
        OSName: "Mac"

      # Remaining entries from the matrix object
      ${{ insert }}: ${{ matrixEntry.value }}

jobs:
  - job: "Test"
    variables:
      - template: ../variables/globals.yml
    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix: $(ProcessedMatrix)

    pool:
      vmImage: "$(OSVmImage)"

    timeoutInMinutes: 240

    steps:
      - template: ../steps/tests-common.yml
        parameters:
          NodeVersion: $(NodeVersion)
          PackageName: ${{ parameters.PackageName }}
          TestType: $(TestType)
          EnvVars: ${{ parameters.EnvVars }}
          OSName: $(OSName)
          TestResultsFiles: $(TestResultsFiles)
