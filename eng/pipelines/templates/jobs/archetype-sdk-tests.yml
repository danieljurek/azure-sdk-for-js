parameters:
  TestTargets:
    - node
    - browser
  PackageName: ""
  EnvVars: []
  MaxParallel: 0
  Matrix:
    Linux_Node10X:
      OSName: "Linux"
      OSVmImage: "ubuntu-16.04"
    Windows_Node10X:
      OSName: "Windows"
      OSVmImage: "vs2017-win2016"
    Mac_Node10X:
      OSName: "Mac"
      OSVmImage: "macOS-10.13"

jobs:
  - job: "Test"
    variables:
      - template: ../variables/globals.yml

    strategy:
      maxParallel: ${{ parameters.MaxParallel }}
      matrix:
        ${{ each testTarget in parameters.TestTargets }}:
          ${{ each matrixEntry in parameters.Matrix }}:
            ${{ matrixEntry.key }}_${{ testTarget }}:
              TestTarget: ${{ testTarget }}
              ${{ each entryParam in matrixEntry.value }}:
                ${{ entryParam.key }}: ${{ entryParam.value }}
    pool:
      vmImage: "$(OSVmImage)"

    timeoutInMinutes: 240

    steps:
      - template: ../steps/tests-common.yml
        parameters:
          PackageName: ${{ parameters.PackageName }}
          TestType: $(TestTarget)
          EnvVars: ${{ parameters.EnvVars }}

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: "**/test-results.xml"
          testRunTitle: "$(OSName) - $(TestTarget) - Live Tests [Node $(NodeVersion)]"
        condition: succeededOrFailed()
        displayName: "Publish node test results"
